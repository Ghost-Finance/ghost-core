/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DebtPool } from "../DebtPool";

export class DebtPool__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token_: string,
    minter_: string,
    overrides?: Overrides
  ): Promise<DebtPool> {
    return super.deploy(token_, minter_, overrides || {}) as Promise<DebtPool>;
  }
  getDeployTransaction(
    token_: string,
    minter_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(token_, minter_, overrides || {});
  }
  attach(address: string): DebtPool {
    return super.attach(address) as DebtPool;
  }
  connect(signer: Signer): DebtPool__factory {
    return super.connect(signer) as DebtPool__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DebtPool {
    return new Contract(address, _abi, signerOrProvider) as DebtPool;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "address",
        name: "minter_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "updated_",
        type: "address",
      },
    ],
    name: "addUpdatedHouse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSynthDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "contract Minter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract GTokenERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "updateHouse",
    outputs: [
      {
        internalType: "contract UpdateHouse",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161085238038061085283398101604081905261002f916100e0565b61003f61003a610070565b610074565b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610112565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100db57600080fd5b919050565b600080604083850312156100f2578182fd5b6100fb836100c4565b9150610109602084016100c4565b90509250929050565b610731806101216000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a0712d6811610071578063a0712d6814610104578063c263c51414610117578063c79fee5c1461012a578063d573b80614610132578063f2fde38b14610147578063fc0c546a1461015a576100a9565b806301c6adc3146100ae57806307546172146100c357806342966c68146100e1578063715018a6146100f45780638da5cb5b146100fc575b600080fd5b6100c16100bc36600461058a565b610162565b005b6100cb61021e565b6040516100d89190610603565b60405180910390f35b6100c16100ef3660046105d3565b61022d565b6100c16102c2565b6100cb61030d565b6100c16101123660046105d3565b61031c565b6100c1610125366004610569565b61037c565b6100cb6103dd565b61013a6103ec565b6040516100d891906106f2565b6100c1610155366004610569565b610479565b6100cb6104ea565b6003546001600160a01b031633146101955760405162461bcd60e51b815260040161018c90610690565b60405180910390fd5b60015460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906101c79085908590600401610631565b602060405180830381600087803b1580156101e157600080fd5b505af11580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021991906105b3565b505050565b6002546001600160a01b031681565b6003546001600160a01b031633146102575760405162461bcd60e51b815260040161018c90610690565b60025460015460405163486a2cdf60e01b81526001600160a01b039283169263486a2cdf9261028d929116908590600401610631565b600060405180830381600087803b1580156102a757600080fd5b505af11580156102bb573d6000803e3d6000fd5b5050505050565b6102ca6104f9565b6001600160a01b03166102db61030d565b6001600160a01b0316146103015760405162461bcd60e51b815260040161018c906106bd565b61030b60006104fd565b565b6000546001600160a01b031690565b6003546001600160a01b031633146103465760405162461bcd60e51b815260040161018c90610690565b6002546001546040516305879e8b60e01b81526001600160a01b03928316926305879e8b9261028d929116908590600401610631565b6103846104f9565b6001600160a01b031661039561030d565b6001600160a01b0316146103bb5760405162461bcd60e51b815260040161018c906106bd565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6002546001546040516321397f1560e21b81526000926001600160a01b03908116926384e5fc54926104249230921690600401610617565b60206040518083038186803b15801561043c57600080fd5b505afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047491906105eb565b905090565b6104816104f9565b6001600160a01b031661049261030d565b6001600160a01b0316146104b85760405162461bcd60e51b815260040161018c906106bd565b6001600160a01b0381166104de5760405162461bcd60e51b815260040161018c9061064a565b6104e7816104fd565b50565b6001546001600160a01b031681565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461056457600080fd5b919050565b60006020828403121561057a578081fd5b6105838261054d565b9392505050565b6000806040838503121561059c578081fd5b6105a58361054d565b946020939093013593505050565b6000602082840312156105c4578081fd5b81518015158114610583578182fd5b6000602082840312156105e4578081fd5b5035919050565b6000602082840312156105fc578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601390820152724973206e6f742075706461746520686f75736560681b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b9081526020019056fea26469706673582212203d4d9131092fa991e600d853f7866246cd2f703ef74e64302911712c1db980d564736f6c63430008000033";
